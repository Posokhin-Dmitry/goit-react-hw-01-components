{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.module.css","components/Profile/Profile.js","components/Statistics/RandomInt.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","description","src","alt","text","statItem","quantity","randomInt","Math","floor","random","getRandomColor","Statistics","title","statistics","statList","map","id","label","percentage","style","backgroundColor","item","FriendListItem","isOnline","status","online","offline","width","nameSection","color","FriendList","friends","friendList","TransactionHistory","items","table","type","amount","currency","Container","children","container","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.885ebe67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2VBRW\",\"description\":\"Profile_description__2bwkD\",\"avatar\":\"Profile_avatar__1MRZR\",\"name\":\"Profile_name__3ZfQr\",\"text\":\"Profile_text__1J42M\",\"stats\":\"Profile_stats__2JpTP\",\"statItem\":\"Profile_statItem__lSgpt\",\"quantity\":\"Profile_quantity__1Cz35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1Tkm3\",\"item\":\"FriendList_item__SRj27\",\"avatar\":\"FriendList_avatar__2dCK2\",\"name\":\"FriendList_name__3WwQc\",\"nameSection\":\"FriendList_nameSection__Couh_\",\"status\":\"FriendList_status__VRAQj\",\"online\":\"FriendList_online__1kLtJ FriendList_status__VRAQj\",\"offline\":\"FriendList_offline__2DpRI FriendList_status__VRAQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3U0n9\",\"title\":\"Statistics_title__3lgOM\",\"statList\":\"Statistics_statList__1smyI\",\"item\":\"Statistics_item__13FYl\",\"label\":\"Statistics_label__12q2B\",\"percentage\":\"Statistics_percentage__B0Nh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__2SyeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__S33mg\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.text}>@{tag}</p>\n        <p className={s.text}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statItem}>\n          <span className=\"label\">Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.statItem}>\n          <span className=\"label\">Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.statItem}>\n          <span className=\"label\">Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number.isRequired),\n};\n\nexport default Profile;\n","const randomInt = () => {\r\n  return Math.floor(Math.random() * 255);\r\n};\r\n\r\nconst getRandomColor = () => {\r\n  return `rgb(${randomInt()}, ${randomInt()}, ${randomInt()})`;\r\n};\r\n\r\nexport default getRandomColor;\r\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport getRandomColor from './RandomInt';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>Upload stats</h2>}\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            style={{ backgroundColor: getRandomColor() }}\n            className={s.item}\n            key={id}\n          >\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n      id: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const status = isOnline ? s.online : s.offline;\r\n  return (\r\n    <li className={s.item}>\r\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <div className={s.nameSection}>\r\n        <span className={status} />\r\n        <p\r\n          className={s.name}\r\n          style={isOnline ? { color: 'green' } : { color: 'red' }}\r\n        >\r\n          {name}\r\n        </p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ id, name, avatar, isOnline }) => (\n        <FriendListItem\n          key={id}\n          name={name}\n          avatar={avatar}\n          isOnline={isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.table}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport Container from './components/Container/Container';\nimport statisticalData from './db/statistical-data.json';\nimport user from './db/user.json';\nimport friends from './db/friends.json';\nimport transactions from './db/transactions.json';\n\nconst App = () => {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}